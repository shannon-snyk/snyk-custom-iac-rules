{
    "Resources": {
        "EngRolePolicyD3B7888F": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:secretsmanager:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":secret:ENVProd/sftprelay/yellow/authorized_keys-ZjSFWI"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": "kms:Decrypt",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:kms:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":alias/ENVProdVaultSecret"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret",
                                "secretsmanager:UpdateSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvDev*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvQA*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvStg*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:PutItem",
                                "dynamodb:DescribeTable",
                                "dynamodb:DeleteItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:Query",
                                "dynamodb:UpdateItem"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvDev*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvQA*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvStg*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:DescribeTable",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:Query"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:dynamodb:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":table/ENVProd*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": "wellarchitected:*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "EngRolePolicyD3B7888F",
                "Roles": [
                    "EngRole"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngRole/Role/Policy/Resource"
            }
        },
        "EngRolePolicy33BF1F81": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "aws-portal:ViewBilling",
                                "ce:DescribeCostCategoryDefinition",
                                "ce:GetRightsizingRecommendation",
                                "ce:GetCostAndUsage",
                                "ce:GetSavingsPlansUtilization",
                                "ce:GetAnomalies",
                                "ce:GetReservationPurchaseRecommendation",
                                "ce:ListCostCategoryDefinitions",
                                "ce:GetCostForecast",
                                "ce:GetPreferences",
                                "ce:GetReservationUtilization",
                                "ce:GetCostCategories",
                                "ce:GetSavingsPlansPurchaseRecommendation",
                                "ce:GetDimensionValues",
                                "ce:GetSavingsPlansUtilizationDetails",
                                "ce:GetAnomalySubscriptions",
                                "ce:GetCostAndUsageWithResources",
                                "ce:DescribeReport",
                                "ce:GetReservationCoverage",
                                "ce:GetSavingsPlansCoverage",
                                "ce:GetAnomalyMonitors",
                                "ce:DescribeNotificationSubscription",
                                "ce:GetTags",
                                "ce:GetUsageForecast"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "compute-optimizer:GetAutoScalingGroupRecommendations",
                                "compute-optimizer:DescribeRecommendationExportJobs",
                                "compute-optimizer:GetEC2InstanceRecommendations",
                                "compute-optimizer:GetEnrollmentStatus",
                                "compute-optimizer:GetEBSVolumeRecommendations",
                                "compute-optimizer:GetLambdaFunctionRecommendations",
                                "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                                "compute-optimizer:GetRecommendationSummaries",
                                "ec2:DescribeVolumes",
                                "ec2:DescribeInstances",
                                "lambda:ListFunctions",
                                "lambda:ListProvisionedConcurrencyConfigs",
                                "autoscaling:DescribeAutoScalingGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "trustedadvisor:DescribeChecks",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "trustedadvisor:DescribeCheckItems",
                                "trustedadvisor:DescribeCheckRefreshStatuses",
                                "trustedadvisor:DescribeCheckSummaries"
                            ],
                            "Effect": "Allow",
                            "NotResource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:trustedadvisor:*:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":checks/security/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "iam:Get*",
                                "iam:List*"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:ResourceTag/saml": "true"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":policy/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":role/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":user/*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "wellarchitected:*",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "EngRolePolicy33BF1F81",
                "Roles": [
                    "EngRole"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngRole/Role/Policy/Resource"
            }
        },
        "AllCodePCIpRoleSynapseCloudformationROE310EC7F": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudformation:Describe*",
                                "cloudformation:EstimateTemplateCost",
                                "cloudformation:Get*",
                                "cloudformation:List*",
                                "cloudformation:ValidateTemplate",
                                "cloudformation:Detect*"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:cloudformation:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":stack/pci*-synapse-*/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": "cloudformation:ListStacks",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:cloudformation:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":stack/*/*"
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "AllCodePCIpRoleSynapseCloudformationROE310EC7F",
                "Roles": [
                    "TA-AllCode-PCIp"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/AllCodePCIpRole/SynapseCloudformationRO/Resource"
            }
        },
        "JenkinsworkerengInfoSecSSMAccess4B3415EF": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "ssm:SendCommand",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::ta-infosec-reports",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:ssm:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":document/InfoSec-AWS-RunLaceworkScan"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:ssm:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":managed-instance/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:ec2:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":instance/*"
                                        ]
                                    ]
                                }
                            ],
                            "Sid": "InfoSecSSMSendCommand"
                        },
                        {
                            "Action": "ssm:GetCommandInvocation",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "InfoSecSSMGetCommandInvocationRO"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "JenkinsworkerengInfoSecSSMAccess4B3415EF",
                "Roles": [
                    "Jenkins-worker-eng"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/Jenkins-worker-eng/InfoSecSSMAccess/Resource"
            }
        },
        "RetoolDynamoDbAccess2386CB2B": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:Scan",
                                "dynamodb:DeleteItem"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvQA-detokenization-approval-request"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvDev-detokenization-approval-request"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvStg-detokenization-approval-request"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/ENVProd-detokenization-approval-request"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "dynamodb:Scan",
                                "dynamodb:PutItem"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvQA-detokenization-allowed-list"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvDev-detokenization-allowed-list"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/EnvStg-detokenization-allowed-list"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:us-west-2:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/ENVProd-detokenization-allowed-list"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RetoolDynamoDbAccess2386CB2B",
                "Roles": [
                    "PCIpEKSNodeRole"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/RetoolDynamoDbAccess/RetoolDynamoDbAccess/Resource"
            }
        },
        "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "aws-portal:ViewBilling",
                                "ce:DescribeCostCategoryDefinition",
                                "ce:GetRightsizingRecommendation",
                                "ce:GetCostAndUsage",
                                "ce:GetSavingsPlansUtilization",
                                "ce:GetAnomalies",
                                "ce:GetReservationPurchaseRecommendation",
                                "ce:ListCostCategoryDefinitions",
                                "ce:GetCostForecast",
                                "ce:GetPreferences",
                                "ce:GetReservationUtilization",
                                "ce:GetCostCategories",
                                "ce:GetSavingsPlansPurchaseRecommendation",
                                "ce:GetDimensionValues",
                                "ce:GetSavingsPlansUtilizationDetails",
                                "ce:GetAnomalySubscriptions",
                                "ce:GetCostAndUsageWithResources",
                                "ce:DescribeReport",
                                "ce:GetReservationCoverage",
                                "ce:GetSavingsPlansCoverage",
                                "ce:GetAnomalyMonitors",
                                "ce:DescribeNotificationSubscription",
                                "ce:GetTags",
                                "ce:GetUsageForecast"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "compute-optimizer:GetAutoScalingGroupRecommendations",
                                "compute-optimizer:DescribeRecommendationExportJobs",
                                "compute-optimizer:GetEC2InstanceRecommendations",
                                "compute-optimizer:GetEnrollmentStatus",
                                "compute-optimizer:GetEBSVolumeRecommendations",
                                "compute-optimizer:GetLambdaFunctionRecommendations",
                                "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                                "compute-optimizer:GetRecommendationSummaries",
                                "ec2:DescribeVolumes",
                                "ec2:DescribeInstances",
                                "lambda:ListFunctions",
                                "lambda:ListProvisionedConcurrencyConfigs",
                                "autoscaling:DescribeAutoScalingGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "trustedadvisor:DescribeChecks",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "trustedadvisor:DescribeCheckItems",
                                "trustedadvisor:DescribeCheckRefreshStatuses",
                                "trustedadvisor:DescribeCheckSummaries"
                            ],
                            "Effect": "Allow",
                            "NotResource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:trustedadvisor:*:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":checks/security/*"
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "",
                "ManagedPolicyName": "CostOptimizationReadOnlyPolicy",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/CostOptimizationReadOnlyPolicy/CostOptimizationReadOnly/Resource"
            }
        },
        "IAMReadOnlyPolicy00E07203": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "iam:Get*",
                                "iam:List*"
                            ],
                            "Condition": {
                                "Null": {
                                    "aws:ResourceTag/saml": "true"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":policy/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":role/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":user/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "",
                "ManagedPolicyName": "IAMReadOnlyPolicy",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/IAMReadOnlyPolicy/IAMReadOnlyPolicy/Resource"
            }
        },
        "SecretListPolicy65AA9B35": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "secretsmanager:List*",
                                "secretsmanager:DescribeSecret",
                                "secretsmanager:GetResourcePolicy"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allows access to the basic SecretsManager interface to list and describe secrets.",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/SecretListPolicy/SecretListPolicy/Resource"
            }
        },
        "ECSReadOnlyPolicyEAA5D6CA": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ecs:DescribeCapacityProviders",
                                "ecs:DescribeClusters",
                                "ecs:DescribeContainerInstances",
                                "ecs:DescribeServices",
                                "ecs:DescribeTaskDefinition",
                                "ecs:DescribeTaskSets",
                                "ecs:DescribeTasks",
                                "ecs:ListAttributes",
                                "ecs:ListClusters",
                                "ecs:ListContainerInstances",
                                "ecs:ListServices",
                                "ecs:ListTagsForResource",
                                "ecs:ListTaskDefinitionFamilies",
                                "ecs:ListTaskDefinitions",
                                "ecs:ListTasks"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "ECSReadOnly"
                        },
                        {
                            "Action": [
                                "application-autoscaling:DescribeScalableTargets",
                                "application-autoscaling:DescribeScalingActivities",
                                "application-autoscaling:DescribeScalingPolicies",
                                "application-autoscaling:DescribeScheduledActions"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AppAutoScalingReadOnly"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Grants permission to developers to read ECS Resources",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/ECSReadOnlyPolicy/ECSReadOnlyPolicy/Resource"
            }
        },
        "EKSReadOnlyPolicy43E2ECA4": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "eks:DescribeCluster",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allows read only access to all EKS clusters.",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EKSReadOnlyPolicy/EKSReadOnlyPolicy/Resource"
            }
        },
        "HeartbeatReadPolicyE94D84CF": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "s3:GetObject",
                            "Effect": "Allow",
                            "Resource": "arn:aws:s3:::*-application3-resources/*",
                            "Sid": "HeartbeatRead"
                        },
                        {
                            "Action": "s3:ListBucket",
                            "Effect": "Allow",
                            "Resource": "arn:aws:s3:::*-application3-resources",
                            "Sid": "HeartbeatList"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Grants permission to developers to read Heartbeat Resources for local testing.",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/HeartbeatReadPolicy/HeartbeatReadPolicy/Resource"
            }
        },
        "CombinedAWSManagedPolicyAD885F1E": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "wellarchitected:*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "WellArchitectedConsoleFullAccess0"
                        },
                        {
                            "Action": [
                                "cloudformation:Describe*",
                                "cloudformation:EstimateTemplateCost",
                                "cloudformation:Get*",
                                "cloudformation:List*",
                                "cloudformation:ValidateTemplate",
                                "cloudformation:Detect*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AWSCloudFormationReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "cloudformation:DescribeStacks",
                                "cloudformation:ListStackResources",
                                "cloudwatch:GetMetricData",
                                "cloudwatch:ListMetrics",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcs",
                                "kms:ListAliases",
                                "iam:GetPolicy",
                                "iam:GetPolicyVersion",
                                "iam:GetRole",
                                "iam:GetRolePolicy",
                                "iam:ListAttachedRolePolicies",
                                "iam:ListRolePolicies",
                                "iam:ListRoles",
                                "logs:DescribeLogGroups",
                                "lambda:Get*",
                                "lambda:List*",
                                "states:DescribeStateMachine",
                                "states:ListStateMachines",
                                "tag:GetResources",
                                "xray:GetTraceSummaries",
                                "xray:BatchGetTraces"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AWSLambdaReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents",
                                "logs:FilterLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*",
                            "Sid": "AWSLambdaReadOnlyAccess1"
                        },
                        {
                            "Action": [
                                "kinesis:Get*",
                                "kinesis:List*",
                                "kinesis:Describe*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonKinesisReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "rds:Describe*",
                                "rds:ListTagsForResource",
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeInternetGateways",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcAttribute",
                                "ec2:DescribeVpcs"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonRDSReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "cloudwatch:GetMetricStatistics",
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonRDSReadOnlyAccess1"
                        },
                        {
                            "Action": "ec2:Describe*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonEC2ReadOnlyAccess0"
                        },
                        {
                            "Action": "elasticloadbalancing:Describe*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonEC2ReadOnlyAccess1"
                        },
                        {
                            "Action": [
                                "cloudwatch:ListMetrics",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:Describe*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonEC2ReadOnlyAccess2"
                        },
                        {
                            "Action": "autoscaling:Describe*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonEC2ReadOnlyAccess3"
                        },
                        {
                            "Action": [
                                "ses:Get*",
                                "ses:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonSESReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "sqs:GetQueueAttributes",
                                "sqs:GetQueueUrl",
                                "sqs:ListDeadLetterSourceQueues",
                                "sqs:ListQueues"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonSQSReadOnlyAccess0"
                        },
                        {
                            "Action": "elasticache:Describe*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonElastiCacheReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "events:DescribeRule",
                                "events:DescribeEventBus",
                                "events:DescribeEventSource",
                                "events:ListEventBuses",
                                "events:ListEventSources",
                                "events:ListRuleNamesByTarget",
                                "events:ListRules",
                                "events:ListTargetsByRule",
                                "events:TestEventPattern",
                                "events:DescribeArchive",
                                "events:ListArchives",
                                "events:DescribeReplay",
                                "events:ListReplays",
                                "events:DescribeConnection",
                                "events:ListConnections",
                                "events:DescribeApiDestination",
                                "events:ListApiDestinations",
                                "events:DescribeEndpoint",
                                "events:ListEndpoints"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AmazonEventBridgeReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "states:ListStateMachines",
                                "states:ListActivities",
                                "states:DescribeStateMachine",
                                "states:DescribeStateMachineForExecution",
                                "states:ListExecutions",
                                "states:DescribeExecution",
                                "states:GetExecutionHistory",
                                "states:DescribeActivity"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AWSStepFunctionsReadOnlyAccess0"
                        },
                        {
                            "Action": [
                                "acm:ListCertificates",
                                "autoscaling:DescribeAccountLimits",
                                "autoscaling:DescribeAutoScalingGroups",
                                "autoscaling:DescribeAutoScalingInstances",
                                "autoscaling:DescribeLaunchConfigurations",
                                "autoscaling:DescribePolicies",
                                "autoscaling:DescribeLoadBalancers",
                                "autoscaling:DescribeNotificationConfigurations",
                                "autoscaling:DescribeScalingActivities",
                                "autoscaling:DescribeScheduledActions",
                                "cloudformation:DescribeStackResource",
                                "cloudformation:DescribeStackResources",
                                "cloudformation:DescribeStacks",
                                "cloudformation:GetTemplate",
                                "cloudformation:ListStackResources",
                                "cloudformation:ListStacks",
                                "cloudformation:ValidateTemplate",
                                "cloudtrail:LookupEvents",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:ListMetrics",
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeAddresses",
                                "ec2:DescribeImages",
                                "ec2:DescribeInstanceAttribute",
                                "ec2:DescribeInstances",
                                "ec2:DescribeInstanceStatus",
                                "ec2:DescribeKeyPairs",
                                "ec2:DescribeLaunchTemplateVersions",
                                "ec2:DescribeLaunchTemplates",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSnapshots",
                                "ec2:DescribeSpotInstanceRequests",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcs",
                                "elasticbeanstalk:Check*",
                                "elasticbeanstalk:Describe*",
                                "elasticbeanstalk:List*",
                                "elasticbeanstalk:RequestEnvironmentInfo",
                                "elasticbeanstalk:RetrieveEnvironmentInfo",
                                "elasticloadbalancing:DescribeInstanceHealth",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "elasticloadbalancing:DescribeSSLPolicies",
                                "elasticloadbalancing:DescribeTargetGroups",
                                "elasticloadbalancing:DescribeTargetHealth",
                                "iam:GetRole",
                                "iam:ListAttachedRolePolicies",
                                "iam:ListInstanceProfiles",
                                "iam:ListRolePolicies",
                                "iam:ListRoles",
                                "iam:ListServerCertificates",
                                "rds:DescribeDBEngineVersions",
                                "rds:DescribeDBInstances",
                                "rds:DescribeOrderableDBInstanceOptions",
                                "rds:DescribeDBSnapshots",
                                "s3:ListAllMyBuckets",
                                "sns:ListSubscriptionsByTopic",
                                "sns:ListTopics",
                                "sqs:ListQueues"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AWSElasticBeanstalkReadOnly0"
                        },
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectAcl",
                                "s3:GetObjectVersion",
                                "s3:GetObjectVersionAcl",
                                "s3:GetBucketLocation",
                                "s3:GetBucketPolicy",
                                "s3:ListBucket"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:s3:::elasticbeanstalk-*",
                            "Sid": "AWSElasticBeanstalkReadOnly1"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Combined AWS Managed Policies.",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/CombinedAWSManagedPolicy/CombinedAWSManagedPolicy/Resource"
            }
        },
        "EmergencyAccessRole0ReadCommunicatorPhoneScrubs3A78225F": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:DescribeTable",
                                "dynamodb:Query",
                                "dynamodb:Scan"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:dynamodb:us-west-2:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":table/CommunicatorPhoneScrubs-pcip"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "dynamodb:List*",
                                "dynamodb:DescribeReservedCapacity*",
                                "dynamodb:DescribeLimits",
                                "dynamodb:DescribeTimeToLive"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "EmergencyAccessRole0ReadCommunicatorPhoneScrubs3A78225F",
                "Roles": [
                    {
                        "Ref": "EmergencyAccessRole0emergencyRole00D5D4501"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EmergencyAccessRole0/ReadCommunicatorPhoneScrubs/Resource"
            }
        },
        "EmergencyAccessRole0emergencyRole00D5D4501": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "emergencyRole 0: currently used by Raja to read CommunicatorPhoneScrubs-pcip dynamo table",
                "RoleName": "emergencyRole0"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EmergencyAccessRole0/emergencyRole0/Resource"
            }
        },
        "EngRoleV2EngV2DynamoDBAdminA614B137": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:PutItem",
                                "dynamodb:DescribeTable",
                                "dynamodb:DeleteItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:Query",
                                "dynamodb:UpdateItem"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/pcid_feature_flag_v0"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/pciq_feature_flag_v0"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/pcis_feature_flag_v0"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for EngV2 pcid/q/s_feature_flag_v0 DynamoDB table to create/update/read live feature flags",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngRoleV2/EngV2DynamoDBAdmin/Resource"
            }
        },
        "EngRoleV295DE521D": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "EngRoleV2: successor to EngRole that is managed using IAC",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "EngRoleV2EngV2DynamoDBAdminA614B137"
                    }
                ],
                "RoleName": "EngRoleV2"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngRoleV2/EngRoleV2/Resource"
            }
        },
        "SynapseResidentDevopsRoleSynapseSecretsAdmin891DAB9A": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:PutSecretValue",
                                "secretsmanager:UpdateSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcid/synapse/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pciq/synapse/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcis/synapse/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcip/synapse/*"
                                        ]
                                    ]
                                }
                            ],
                            "Sid": "SynapseSecretsManager"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for Synapse pcix secrets (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/SynapseResidentDevopsRole/SynapseSecretsAdmin/Resource"
            }
        },
        "SynapseResidentDevopsRoleBBF0C810": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "SynapseResidentDevopsRole: elevated admin role for Synapse Resident DevOps",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "SynapseResidentDevopsRoleSynapseSecretsAdmin891DAB9A"
                    }
                ],
                "RoleName": "SynapseResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/SynapseResidentDevopsRole/SynapseResidentDevopsRole/Resource"
            }
        },
        "GrowthResidentDevopsRoleGrowthSecretsAdmin5DCB4E15": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:PutSecretValue",
                                "secretsmanager:UpdateSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvDev/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvQA/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:EnvStg/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:*:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:ENVProd/*"
                                        ]
                                    ]
                                }
                            ],
                            "Sid": "T10NSecretsManager"
                        },
                        {
                            "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:DescribeKey"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:kms:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":alias/EnvDevVaultSecret"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:kms:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":alias/EnvQAVaultSecret"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:kms:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":alias/EnvStgVaultSecret"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:kms:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":alias/ENVProdVaultSecret"
                                        ]
                                    ]
                                }
                            ],
                            "Sid": "T10NVaultKms"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for Growth t10n secrets (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/GrowthResidentDevopsRole/GrowthSecretsAdmin/Resource"
            }
        },
        "GrowthResidentDevopsRoleGrowthDynamoDBAdminE8212EF3": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:PutItem",
                                "dynamodb:DescribeTable",
                                "dynamodb:DeleteItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:Query",
                                "dynamodb:UpdateItem"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/T10n*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/T10N*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/t10n*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:dynamodb:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":table/t10N*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for Growth ENVProd/ENVProd DynamoDB (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/GrowthResidentDevopsRole/GrowthDynamoDBAdmin/Resource"
            }
        },
        "GrowthResidentDevopsRoleGrowthEKSAdmin63C30854": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "eks:AccessKubernetesApi",
                                "eks:DescribeNodegroup",
                                "eks:ListNodegroups",
                                "eks:ListTagsForResource",
                                "eks:ListUpdates",
                                "eks:DescribeUpdate",
                                "eks:DescribeCluster",
                                "eks:ListClusters"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:eks:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":cluster/T10N*"
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow Kubernetes access to the T10N EKS clusters (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/GrowthResidentDevopsRole/GrowthEKSAdmin/Resource"
            }
        },
        "GrowthResidentDevopsRoleGrowthSSMAdmin4017C9E0": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ssm:PutParameter",
                                "ssm:GetParameters",
                                "ssm:GetParameter"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/T10N*"
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow access to the T10N SSM parameters for version updating and deployment for T10N (specifically PROD since it cant be deployed via Jenkins) (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/GrowthResidentDevopsRole/GrowthSSMAdmin/Resource"
            }
        },
        "GrowthResidentDevopsRole112DF44B": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "GrowthResidentDevopsRole: elevated admin role for Growth Resident DevOps",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "GrowthResidentDevopsRoleGrowthSSMAdmin4017C9E0"
                    },
                    {
                        "Ref": "GrowthResidentDevopsRoleGrowthDynamoDBAdminE8212EF3"
                    },
                    {
                        "Ref": "GrowthResidentDevopsRoleGrowthEKSAdmin63C30854"
                    },
                    {
                        "Ref": "GrowthResidentDevopsRoleGrowthSecretsAdmin5DCB4E15"
                    }
                ],
                "RoleName": "GrowthResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/GrowthResidentDevopsRole/GrowthResidentDevopsRole/Resource"
            }
        },
        "EngageResidentDevopsRoleEngageRDSAdmin99BBF13E": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "rds:CopyDBClusterParameterGroup",
                                "rds:CopyDBClusterSnapshot",
                                "rds:CopyDBParameterGroup",
                                "rds:CopyDBSnapshot",
                                "rds:CreateDBCluster",
                                "rds:CreateDBClusterEndpoint",
                                "rds:CreateDBClusterSnapshot",
                                "rds:CreateDBInstance",
                                "rds:CreateDBSnapshot",
                                "rds:StartExportTask",
                                "rds:ModifyDBCluster"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:rds:us-west-2:123456789012:cluster:db3-12-26-00-cluster",
                                "arn:aws:rds:us-west-2:123456789012:db:db3-12-26-00-node01",
                                "arn:aws:rds:us-west-2:123456789012:db:db3-12-26-00-cluster",
                                "arn:aws:rds:us-west-2:123456789012:cluster-pg:default.aurora-mysql5.7",
                                "arn:aws:rds:us-west-2:123456789012:pg:default.aurora-mysql5.7",
                                "arn:aws:rds:us-west-2:123456789012:og:default:aurora-mysql-5-7"
                            ],
                            "Sid": "EngageRDS"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for Engage RDS (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngageResidentDevopsRole/EngageRDSAdmin/Resource"
            }
        },
        "EngageResidentDevopsRoleEngageCloudFrontAdmin72BC8C4A": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "cloudfront:UpdateDistribution",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:cloudfront::123456789012:distribution/E15R9ECK99M4RT",
                                "arn:aws:cloudfront::123456789012:distribution/E2RRLMYGGNTLLK"
                            ],
                            "Sid": "EngageCloudFront"
                        },
                        {
                            "Action": [
                                "acm:DescribeCertificate",
                                "acm:ListCertificates"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:acm:us-east-1:123456789012:certificate/68798ae9-9b53-480f-a705-b248074a6bf5",
                            "Sid": "EngageCloudFrontCerts"
                        },
                        {
                            "Action": "wafv2:ListWebACLs",
                            "Effect": "Allow",
                            "Resource": "arn:aws:wafv2:us-east-1:123456789012:global/webacl/*",
                            "Sid": "EngageCloudFrontWafs"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow updating CloudFront distributions for Engage (Resident DevOps use only)",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngageResidentDevopsRole/EngageCloudFrontAdmin/Resource"
            }
        },
        "EngageResidentDevopsRole98E81C92": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "EngageResidentDevopsRole: elevated admin role for Engage Resident DevOps",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "EngageResidentDevopsRoleEngageRDSAdmin99BBF13E"
                    },
                    {
                        "Ref": "EngageResidentDevopsRoleEngageCloudFrontAdmin72BC8C4A"
                    }
                ],
                "RoleName": "EngageResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/EngageResidentDevopsRole/EngageResidentDevopsRole/Resource"
            }
        },
        "OpsConResidentDevopsRoleOpsConAdmin3703E63D": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:PutSecretValue",
                                "secretsmanager:UpdateSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcip/prosper-S2mUa7"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pciq/prosper-WkXhJD"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcis/prosper-LEOvMJ"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcid/prosper-5DZ3Dn"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pciq/prosper/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pciq/opscon/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcis/prosper/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcis/opscon/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcid/prosper/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcid/opscon/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcip/prosper/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:secretsmanager:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":secret:pcip/opscon/*"
                                        ]
                                    ]
                                }
                            ],
                            "Sid": "OpsConSecretsManager"
                        },
                        {
                            "Action": [
                                "rds:StartExportTask",
                                "rds:AddRoleToDBCluster",
                                "rds:AddRoleToDBInstance",
                                "rds:AddSourceIdentifierToSubscription",
                                "rds:AddTagsToResource",
                                "rds:ApplyPendingMaintenanceAction",
                                "rds:BacktrackDBCluster",
                                "rds:CopyDBClusterParameterGroup",
                                "rds:CopyDBClusterSnapshot",
                                "rds:CopyDBParameterGroup",
                                "rds:CopyDBSnapshot",
                                "rds:CopyOptionGroup",
                                "rds:CreateDBCluster",
                                "rds:CreateDBClusterEndpoint",
                                "rds:CreateDBClusterParameterGroup",
                                "rds:CreateDBClusterSnapshot",
                                "rds:CreateDBInstance",
                                "rds:CreateDBInstanceReadReplica",
                                "rds:CreateDBParameterGroup",
                                "rds:CreateDBSecurityGroup",
                                "rds:CreateDBSnapshot",
                                "rds:CreateDBSubnetGroup",
                                "rds:CreateEventSubscription",
                                "rds:CreateGlobalCluster",
                                "rds:CreateOptionGroup",
                                "rds:DeleteDBCluster",
                                "rds:DeleteDBClusterEndpoint",
                                "rds:DeleteDBClusterParameterGroup",
                                "rds:DeleteDBClusterSnapshot",
                                "rds:DeleteDBInstance",
                                "rds:DeleteDBParameterGroup",
                                "rds:DeleteDBProxy",
                                "rds:DeleteDBSecurityGroup",
                                "rds:DeleteDBSnapshot",
                                "rds:DeleteDBSubnetGroup",
                                "rds:DeleteEventSubscription",
                                "rds:DeleteGlobalCluster",
                                "rds:DeleteOptionGroup",
                                "rds:DeregisterDBProxyTargets",
                                "rds:FailoverDBCluster",
                                "rds:ModifyCurrentDBClusterCapacity",
                                "rds:ModifyDBCluster",
                                "rds:ModifyDBClusterEndpoint",
                                "rds:ModifyDBClusterParameterGroup",
                                "rds:ModifyDBClusterSnapshotAttribute",
                                "rds:ModifyDBInstance",
                                "rds:ModifyDBParameterGroup",
                                "rds:ModifyDBProxy",
                                "rds:ModifyDBProxyTargetGroup",
                                "rds:ModifyDBSnapshot",
                                "rds:ModifyDBSnapshotAttribute",
                                "rds:ModifyDBSubnetGroup",
                                "rds:ModifyEventSubscription",
                                "rds:ModifyGlobalCluster",
                                "rds:ModifyOptionGroup",
                                "rds:PromoteReadReplica",
                                "rds:PromoteReadReplicaDBCluster",
                                "rds:RebootDBInstance",
                                "rds:RegisterDBProxyTargets",
                                "rds:RemoveFromGlobalCluster",
                                "rds:RemoveRoleFromDBCluster",
                                "rds:RemoveRoleFromDBInstance",
                                "rds:RemoveSourceIdentifierFromSubscription",
                                "rds:RemoveTagsFromResource",
                                "rds:ResetDBClusterParameterGroup",
                                "rds:ResetDBParameterGroup",
                                "rds:RestoreDBClusterFromS3",
                                "rds:RestoreDBClusterFromSnapshot",
                                "rds:RestoreDBClusterToPointInTime",
                                "rds:RestoreDBInstanceFromDBSnapshot",
                                "rds:RestoreDBInstanceFromS3",
                                "rds:RestoreDBInstanceToPointInTime",
                                "rds:RevokeDBSecurityGroupIngress",
                                "rds:StartActivityStream",
                                "rds:StartDBCluster",
                                "rds:StartDBInstance",
                                "rds:StopActivityStream",
                                "rds:StopDBCluster",
                                "rds:StopDBInstance"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "aws:ResourceTag/Eng_Business_Product": "ops_con"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:rds:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            },
                            "Sid": "OpsConRdsResources"
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:PutObject*",
                                "s3:DeleteObject*",
                                "s3:ListBucket",
                                "s3:DeleteBucket"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "aws:ResourceTag/Eng_Business_Product": "ops_con"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": "arn:aws:s3:::*",
                            "Sid": "OpsConS3Resources"
                        },
                        {
                            "Action": [
                                "lambda:InvokeFunction",
                                "lambda:InvokeAsync",
                                "lambda:GetFunction",
                                "lambda:GetFunctionConfiguration",
                                "lambda:ListFunctions",
                                "lambda:TagResource",
                                "lambda:UntagResource",
                                "lambda:UpdateFunctionCode",
                                "lambda:UpdateFunctionConfiguration"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "aws:ResourceTag/Eng_Business_Product": "ops_con"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:lambda:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":function:*"
                                    ]
                                ]
                            },
                            "Sid": "OpsConLambdaResources"
                        },
                        {
                            "Action": [
                                "sqs:CreateQueue",
                                "sqs:DeleteMessage",
                                "sqs:DeleteQueue",
                                "sqs:PurgeQueue",
                                "sqs:ListQueues",
                                "sqs:SendMessage",
                                "sqs:GetQueueUrl",
                                "sqs:GetQueueAttributes",
                                "sqs:SetQueueAttributes"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "aws:ResourceTag/Eng_Business_Product": "ops_con"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:sqs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            },
                            "Sid": "OpsConSqsResources"
                        },
                        {
                            "Action": [
                                "ssm:PutParameter",
                                "ssm:GetParameters",
                                "ssm:GetParameter"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "aws:ResourceTag/Eng_Business_Product": "ops_con"
                                }
                            },
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/*"
                                    ]
                                ]
                            },
                            "Sid": "OpsConSsmResources"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for OpsCon tagged resources, pcis/p secrets and all secrets on pcid and pciq.",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/OpsConResidentDevopsRole/OpsConAdmin/Resource"
            }
        },
        "OpsConResidentDevopsRole8BBA0831": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "OpsConResidentDevopsRole: elevated admin role for OpsCon Resident DevOps",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "OpsConResidentDevopsRoleOpsConAdmin3703E63D"
                    }
                ],
                "RoleName": "OpsConResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/OpsConResidentDevopsRole/OpsConResidentDevopsRole/Resource"
            }
        },
        "DataEngResidentDevopsRoleDataEngAdmin7ACC27C0": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:DescribeLimits",
                                "dynamodb:DescribeReservedCapacity",
                                "dynamodb:DescribeReservedCapacityOfferings",
                                "dynamodb:ListBackups",
                                "dynamodb:ListContributorInsights",
                                "dynamodb:ListExports",
                                "dynamodb:ListGlobalTables",
                                "dynamodb:ListStreams",
                                "dynamodb:ListTables",
                                "ec2:Describe*",
                                "ec2:GetTransitGateway*",
                                "ec2:Search*",
                                "s3:CreateJob",
                                "s3:GetAccessPoint",
                                "s3:GetAccountPublicAccessBlock",
                                "s3:ListAccessPoints",
                                "s3:ListAllMyBuckets",
                                "s3:ListJobs",
                                "s3:ListStorageLensConfigurations",
                                "s3:PutStorageLensConfiguration"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "DataEngPolicy"
                        },
                        {
                            "Action": "dynamodb:*",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:dynamodb:us-west-2:123456789012:table/snowflake-base-tables",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/snowflake-base-tables_staging",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/snowflake-base-tables_test",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/pcid_snowflake-base-tables",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/pciq_snowflake-base-tables",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/pcis_snowflake-base-tables",
                                "arn:aws:dynamodb:us-west-2:123456789012:table/pcip_snowflake-base-tables"
                            ],
                            "Sid": "DataEngDDBStatement"
                        },
                        {
                            "Action": "datapipeline:*",
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "DataEngDataPipelineAdmin"
                        },
                        {
                            "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:PutSecretValue",
                                "secretsmanager:UpdateSecret"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:secretsmanager:us-west-2:123456789012:secret:deng/*",
                            "Sid": "DataEngSecretsManagerStatement"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow access to DataEng owned infrastructure and AWS services we adminster",
                "ManagedPolicyName": "DataEngAdminPolicy",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/DataEngResidentDevopsRole/DataEngAdmin/Resource"
            }
        },
        "DataEngResidentDevopsRole04F8B3AE": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "DataEngResidentDevopsRole: Elevated Admin Role for DataEng Resident DevOps Members",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "DataEngResidentDevopsRoleDataEngAdmin7ACC27C0"
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEMRFullAccessPolicy_v2"
                            ]
                        ]
                    }
                ],
                "MaxSessionDuration": 28800,
                "RoleName": "DataEngResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/DataEngResidentDevopsRole/DataEngResidentDevopsRole/Resource"
            }
        },
        "RetainEngRoleRetainAdminA5689608": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:BatchWriteItem",
                                "dynamodb:BatchGetItem",
                                "dynamodb:PutItem",
                                "dynamodb:GetItem"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:dynamodb:us-west-2:123456789012:table/retain-*",
                            "Sid": "RetainDynamoDbManager"
                        },
                        {
                            "Action": [
                                "events:PutRule",
                                "events:Describe*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:events:us-west-2:123456789012:rule/retain-*-sftp-scanner-schedule",
                                "arn:aws:events:us-west-2:123456789012:rule/retain-go-services-*-SFTPSchedule-*"
                            ],
                            "Sid": "RetainEventBridgeManager"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow read/write access for Retain resources",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/RetainEngRole/RetainAdmin/Resource"
            }
        },
        "RetainEngRole189AC6DF": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RetainEngRole: role for Retain engineers to access Retain resources",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "RetainEngRoleRetainAdminA5689608"
                    }
                ],
                "RoleName": "RetainEngRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/RetainEngRole/RetainEngRole/Resource"
            }
        },
        "HeartbeatResidentDevopsRoleHeartbeatDevopsRole8D5B3994": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "HeartbeatResidentDevopsRole: elevated admin role for Heartbeat Resident DevOps",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    }
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ecs:RunTask",
                                        "ecs:StartTask",
                                        "ecs:StartTelemetrySession",
                                        "ecs:StopTask",
                                        "ecs:UpdateCapacityProvider",
                                        "ecs:UpdateCluster",
                                        "ecs:UpdateClusterSettings",
                                        "ecs:UpdateService",
                                        "ecs:Describe*",
                                        "ecs:List*"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":cluster/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":container-instance/*/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":service/*/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":task/*/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":task-definition/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ecs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":capacity-provider/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "ECSAdminAccess"
                                },
                                {
                                    "Action": [
                                        "ec2:CreateLaunchTemplateVersion",
                                        "ec2:ModifyInstanceAttribute",
                                        "ec2:ModifyInstanceMaintenanceOptions",
                                        "ec2:ModifyInstanceMetadataOptions",
                                        "ec2:ModifyInstancePlacement",
                                        "ec2:ModifyLaunchTemplate",
                                        "ec2:MonitorInstances",
                                        "ec2:RebootInstances",
                                        "ec2:ResetInstanceAttribute",
                                        "ec2:StartInstances",
                                        "ec2:StopInstances",
                                        "ec2:TerminateInstances",
                                        "ec2:UnmonitorInstances"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ec2:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":instance/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:ec2:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":launch-template/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "Ec2AdminWriteAccess"
                                },
                                {
                                    "Action": [
                                        "autoscaling:AttachInstances",
                                        "autoscaling:BatchDeleteScheduledAction",
                                        "autoscaling:BatchPutScheduledUpdateGroupAction",
                                        "autoscaling:CancelInstanceRefresh",
                                        "autoscaling:CompleteLifecycleAction",
                                        "autoscaling:DeletePolicy",
                                        "autoscaling:DeleteScheduledAction",
                                        "autoscaling:DeleteWarmPool",
                                        "autoscaling:DetachInstances",
                                        "autoscaling:DisableMetricsCollection",
                                        "autoscaling:EnableMetricsCollection",
                                        "autoscaling:EnterStandby",
                                        "autoscaling:ExecutePolicy",
                                        "autoscaling:ExitStandby",
                                        "autoscaling:GetPredictiveScalingForecast",
                                        "autoscaling:PutLifecycleHook",
                                        "autoscaling:PutNotificationConfiguration",
                                        "autoscaling:PutScalingPolicy",
                                        "autoscaling:PutScheduledUpdateGroupAction",
                                        "autoscaling:PutWarmPool",
                                        "autoscaling:ResumeProcesses",
                                        "autoscaling:SetDesiredCapacity",
                                        "autoscaling:SetInstanceHealth",
                                        "autoscaling:SetInstanceProtection",
                                        "autoscaling:StartInstanceRefresh",
                                        "autoscaling:SuspendProcesses",
                                        "autoscaling:TerminateInstanceInAutoScalingGroup",
                                        "autoscaling:UpdateAutoScalingGroup",
                                        "autoscaling:Describe*"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "AutoscalingAccess"
                                },
                                {
                                    "Action": [
                                        "application-autoscaling:*",
                                        "autoscaling-plans:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "ApplicationAutoscalingAdminAccess"
                                },
                                {
                                    "Action": "ssm:StartSession",
                                    "Condition": {
                                        "StringEquals": {
                                            "ssm:resourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:ec2:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":instance/*"
                                            ]
                                        ]
                                    },
                                    "Sid": "SSMSessionManagerStartSession"
                                },
                                {
                                    "Action": [
                                        "ssm:TerminateSession",
                                        "ssm:ResumeSession"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "ssm:resourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:ssm:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":${aws:username}-*"
                                            ]
                                        ]
                                    },
                                    "Sid": "SSMSessionManagerManageSession"
                                },
                                {
                                    "Action": [
                                        "ssm:DescribeSessions",
                                        "ssm:GetConnectionStatus",
                                        "ssm:DescribeInstanceProperties"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "SSMSessionDescribe"
                                },
                                {
                                    "Action": "kms:GenerateDataKey",
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:kms:us-west-2:123456789012:key/b62612d8-d67c-4e9f-9c84-1abf84288c32",
                                        "arn:aws:kms:us-west-2:123456789012:key/444ff975-aefa-4583-8a57-3d91ae42c5d6"
                                    ],
                                    "Sid": "SSMUseKMSKeys"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "HeartbeatAdminPolicy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "kinesis:DecreaseStreamRetentionPeriod",
                                        "kinesis:DisableEnhancedMonitoring",
                                        "kinesis:EnableEnhancedMonitoring",
                                        "kinesis:GetRecords",
                                        "kinesis:GetShardIterator",
                                        "kinesis:IncreaseStreamRetentionPeriod",
                                        "kinesis:MergeShards",
                                        "kinesis:SplitShard",
                                        "kinesis:UpdateShardCount",
                                        "kinesis:UpdateStreamMode"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "KinesisAdminAccess"
                                },
                                {
                                    "Action": [
                                        "states:StartExecution",
                                        "states:StartExecutionAsync",
                                        "states:StopExecution"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "StepFunctionsAdminAccess"
                                },
                                {
                                    "Action": [
                                        "sqs:ChangeMessageVisibility",
                                        "sqs:DeleteMessage",
                                        "sqs:GetQueueAttributes",
                                        "sqs:GetQueueUrl",
                                        "sqs:PurgeQueue",
                                        "sqs:ReceiveMessage",
                                        "sqs:SendMessage",
                                        "sqs:SetQueueAttributes"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:sqs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":*heartbeat*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:sqs:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":*beatbox*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "SQSAdminAccess"
                                },
                                {
                                    "Action": [
                                        "rds:ApplyPendingMaintenanceAction",
                                        "rds:BacktrackDBCluster",
                                        "rds:Copy*",
                                        "rds:CreateDBClusterSnapshot",
                                        "rds:CreateDBSnapshot",
                                        "rds:DeleteDBClusterSnapshot",
                                        "rds:DeleteDBInstanceAutomatedBackup",
                                        "rds:DeleteDBSnapshot",
                                        "rds:FailoverDBCluster",
                                        "rds:PromoteReadReplica",
                                        "rds:PromoteReadReplicaDBCluster",
                                        "rds:RebootDBCluster",
                                        "rds:RebootDBInstance",
                                        "rds:RestoreDBClusterFromSnapshot",
                                        "rds:RestoreDBClusterToPointInTime",
                                        "rds:RestoreDBInstanceFromDBSnapshot",
                                        "rds:RestoreDBInstanceToPointInTime",
                                        "rds:StartDBCluster",
                                        "rds:StartDBInstance",
                                        "rds:StartDBInstanceAutomatedBackupsReplication",
                                        "rds:StopDBCluster",
                                        "rds:StopDBInstance",
                                        "rds:StopDBInstanceAutomatedBackupsReplication"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:rds:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":cluster:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:rds:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":cluster-snapshot:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:rds:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":db:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:rds:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":snapshot:*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "RdsAdminAccess"
                                },
                                {
                                    "Action": [
                                        "secretsmanager:CancelRotateSecret",
                                        "secretsmanager:GetRandomPassword",
                                        "secretsmanager:GetSecretValue",
                                        "secretsmanager:PutSecretValue",
                                        "secretsmanager:RestoreSecret",
                                        "secretsmanager:RotateSecret",
                                        "secretsmanager:UpdateSecret",
                                        "secretsmanager:UpdateSecretVersionStage"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "AdminSecretAccess"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "BeatBoxAdminPolicy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction",
                                        "lambda:PublishVersion",
                                        "lambda:PutFunctionConcurrency",
                                        "lambda:PutFunctionEventInvokeConfig",
                                        "lambda:PutProvisionedConcurrencyConfig",
                                        "lambda:UpdateEventSourceMapping",
                                        "lambda:UpdateFunctionConfiguration",
                                        "lambda:UpdateFunctionEventInvokeConfig"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:lambda:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":event-source-mapping:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:lambda:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":function:*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:lambda:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":function:*:*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "lambdaAdminAccess"
                                },
                                {
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:GetParameterHistory",
                                        "ssm:GetParameters",
                                        "ssm:GetParametersByPath",
                                        "ssm:LabelParameterVersion",
                                        "ssm:PutParameter"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:ssm:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":parameter/*"
                                            ]
                                        ]
                                    },
                                    "Sid": "SSMParameterAccess"
                                },
                                {
                                    "Action": [
                                        "cloudformation:CancelUpdateStack",
                                        "cloudformation:ContinueUpdateRollback",
                                        "cloudformation:CreateChangeSet",
                                        "cloudformation:DeleteChangeSet",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:ExecuteChangeSet",
                                        "cloudformation:RollbackStack",
                                        "cloudformation:UpdateStack",
                                        "cloudformation:ValidateTemplate",
                                        "cloudformation:Get*",
                                        "cloudformation:List*",
                                        "cloudformation:Detect*",
                                        "cloudformation:Describe*"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "aws:ResourceTag/Business_Process": [
                                                "heartbeat",
                                                "ai_data_science"
                                            ]
                                        }
                                    },
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:cloudformation:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":stack/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:cloudformation:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":changeSet/*"
                                                ]
                                            ]
                                        }
                                    ],
                                    "Sid": "CloudFormationAdminAccess"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "GenericAdminPolicy"
                    }
                ],
                "RoleName": "HeartbeatResidentDevopsRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/HeartbeatResidentDevopsRole/HeartbeatDevopsRole/Resource"
            }
        },
        "InsightsEngRoleInsightsEng6DCC5425": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "ec2:startInstances",
                            "Effect": "Allow",
                            "Resource": "arn:aws:ec2:us-west-2:123456789012:instance/i-0a5549be349d255ef",
                            "Sid": "InsightsEngEC2Policy"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "Allow access to Inights owned infrastructure and AWS services their team uses",
                "ManagedPolicyName": "InsightsEngPolicy",
                "Path": "/"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/InsightsEngRole/InsightsEng/Resource"
            }
        },
        "InsightsEngRoleB4060BA8": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithSAML",
                            "Condition": {
                                "StringEquals": {
                                    "SAML:aud": "https://urldefense.com/v3/__https://signin.aws.amazon.com/saml__;!!DTvzObgdrQ!cJV2e4EiwD7EJKeVfV32OM0sPQ20AlkfeWRnLCdBz0oso6lhkCXzJWRPE8B6ynwrqsEV0xcNYZzkd_BoiV0KSZQ$ "
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":saml-provider/Okta-SAML"
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "InsightsEngRole: SAML Role for Insights Eng Team Members",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngCommonRO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/TA-monitoring-RO"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/ta-eng-secrets"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":policy/EngRolePolicy"
                            ]
                        ]
                    },
                    {
                        "Ref": "CostOptimizationReadOnlyPolicyCostOptimizationReadOnly22275CF0"
                    },
                    {
                        "Ref": "IAMReadOnlyPolicy00E07203"
                    },
                    {
                        "Ref": "SecretListPolicy65AA9B35"
                    },
                    {
                        "Ref": "EKSReadOnlyPolicy43E2ECA4"
                    },
                    {
                        "Ref": "ECSReadOnlyPolicyEAA5D6CA"
                    },
                    {
                        "Ref": "HeartbeatReadPolicyE94D84CF"
                    },
                    {
                        "Ref": "CombinedAWSManagedPolicyAD885F1E"
                    },
                    {
                        "Ref": "InsightsEngRoleInsightsEng6DCC5425"
                    }
                ],
                "RoleName": "InsightsEngRole"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/InsightsEngRole/InsightsEngRole/Resource"
            }
        },
        "CDKMetadata": {
            "Type": "AWS::CDK::Metadata",
            "Properties": {
                "Analytics": "v2:deflate64:H4sIAAAAAAAA/zPSMzLQM1BMLC/WTU7J1s3JTNKrDi5JTM7WCUotzi8tSk7VAcrFZybm6lUH5OdkJlfqOKflQVm+iXmJ6akpCHFUgaD8nFSQKIiuBTOgRtbq5OWnpOplFeuXGZroGVrqGSpmFWdm6haV5pVk5qbqBUFoAPKgVMCcAAAA"
            },
            "Metadata": {
                "aws:cdk:path": "InfraSamlStack/CDKMetadata/Default"
            }
        }
    },
    "Parameters": {
        "BootstrapVersion": {
            "Type": "AWS::SSM::Parameter::Value<String>",
            "Default": "/cdk-bootstrap/hnb659fds/version",
            "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
        }
    },
    "Rules": {
        "CheckBootstrapVersion": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Contains": [
                                    [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5"
                                    ],
                                    {
                                        "Ref": "BootstrapVersion"
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
                }
            ]
        }
    }
}